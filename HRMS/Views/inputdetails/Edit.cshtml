@model HRMS.DL.Entities.tblCertificateInputFieldDetails

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>tblCertificateInputFieldDetails</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.IsActive)
    @Html.HiddenFor(model => model.tblMaCertificateSubTypesId)
    @Html.HiddenFor(model => model.tblMaInputFieldsId)

    <div class="form-group">
        @Html.LabelFor(model => model.tblMaCertificateSubTypesId, "tblMaCertificateSubTypesId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("tblMaCertificateSubTypesId", null, htmlAttributes: new { @disabled = "disabled", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.tblMaCertificateSubTypesId, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.tblMaInputFieldsId, "tblMaInputFieldsId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("tblMaInputFieldsId", null, htmlAttributes: new { @disabled = "disabled", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.tblMaInputFieldsId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tblMaFieldAlignmentId, "tblMaFieldAlignmentId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tblMaFieldAlignmentId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tblMaFieldAlignmentId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.XLocation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.XLocation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.XLocation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.YLocation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.YLocation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.YLocation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Color, "Color", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Color", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Font, "Font", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Font", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Font, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FontSize, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FontSize, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FontSize, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FontAttribute, "FontAttribute", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("FontAttribute", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FontAttribute, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        Is Done
        <div class="col-md-10">
            @Html.EditorFor(model => model.IsDeleted, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
